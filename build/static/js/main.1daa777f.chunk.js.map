{"version":3,"sources":["components/Song.jsx","components/Player.jsx","components/LibrarySong.jsx","components/Library.jsx","components/ListQueue.jsx","components/ListRecommend.jsx","components/List.jsx","components/Nav.jsx","data.jsx","App.js","index.js"],"names":["Song","_ref","currentSong","songInfo","songAnimation","transform","concat","currentTime","_jsxs","className","children","_jsx","src","cover","alt","name","style","artist","Player","isPlaying","setIsPlaying","audioRef","setSongInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","activeSong","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","async","currentIndex","findIndex","direction","length","current","play","trackAnim","animationPercentage","volume","setVolume","useState","isMuted","setIsMuted","prevVolumeValue","setPrevVolumeValue","background","color","min","max","duration","value","onChange","e","target","type","FontAwesomeIcon","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","volumeLevel","onVolumeClickHandler","faVolumeMute","faVolumeUp","LibrarySong","listQueue","setListQueue","typeOfButton","useEffect","undefined","lq","correspondingInSongs","find","s","event","some","queueSong","stopPropagation","updatedListQueue","filter","faPlus","faMinus","Library","libraryStatus","ListQueue","_Fragment","display","justifyContent","alignItems","ListRecommend","listStatus","List","Nav","setLibraryStatus","setListStatus","darkThemeHandler","faMusic","htmlFor","chillHop","audio","uuidv4","App","data","darkTheme","setDarkTheme","useRef","timeUpdateHandler","roundedCurrentTime","round","roundedDuration","onTimeUpdate","onLoadedMetadata","ref","onEnded","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1daa777f.chunk.js","sourcesContent":["export default function Song({ currentSong, songInfo }) {\r\n    const songAnimation = {\r\n        transform: `rotate(${songInfo.currentTime * 10}deg)`,\r\n    };\r\n\r\n    return (\r\n        <div className=\"song_container\">\r\n            <img\r\n                src={currentSong.cover}\r\n                alt={currentSong.name}\r\n                style={songAnimation}\r\n            />\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    );\r\n}\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faPlay,\r\n    faPause,\r\n    faAngleLeft,\r\n    faAngleRight,\r\n    faVolumeMute,\r\n    faVolumeUp,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Player({\r\n    currentSong,\r\n    isPlaying,\r\n    setIsPlaying,\r\n    audioRef,\r\n    songInfo,\r\n    setSongInfo,\r\n    songs,\r\n    setCurrentSong,\r\n    setSongs,\r\n}) {    \r\n    const activeLibraryHandler = (nextPrev) => {\r\n        const activeSong = songs.map((song) => {\r\n            if (song.id === nextPrev.id) {\r\n                return { ...song, active: true };\r\n            } else {\r\n                return { ...song, active: false };\r\n            }\r\n        });\r\n        setSongs(activeSong);\r\n    };\r\n\r\n    const playSongHandler = () => {\r\n        if (isPlaying) {\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        } else {\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    };\r\n\r\n    const getTime = (time) => {\r\n        return (\r\n            Math.floor(time / 60) +\r\n            \":\" +\r\n            (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        );\r\n    };\r\n\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value;\r\n        setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n    };\r\n\r\n    const skipTrackHandler = async (direction) => {\r\n        let currentIndex = songs.findIndex(\r\n            (song) => song.id === currentSong.id\r\n        );\r\n\r\n        if (direction === \"forward\") {\r\n            await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n            activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n        }\r\n        if (direction === \"backward\") {\r\n            if (currentIndex === 0) {\r\n                await setCurrentSong(songs[songs.length - 1]);\r\n                activeLibraryHandler(songs[songs.length - 1]);\r\n            } else {\r\n                await setCurrentSong(songs[currentIndex - 1]);\r\n                activeLibraryHandler(songs[currentIndex - 1]);\r\n            }\r\n        }\r\n        if (isPlaying) audioRef.current.play();\r\n    };\r\n\r\n    const trackAnim = {\r\n        transform: `translateX(${songInfo.animationPercentage}%)`,\r\n    };\r\n\r\n    const [volume, setVolume] = useState(50);\r\n    const [isMuted, setIsMuted] = useState(false);\r\n    const [prevVolumeValue, setPrevVolumeValue] = useState(volume);\r\n\r\n    const onVolumeClickHandler = () => {\r\n        if (isMuted) {\r\n            audioRef.current.volume = prevVolumeValue / 100;\r\n            setVolume(prevVolumeValue);\r\n            setIsMuted(false);\r\n        } else {\r\n            audioRef.current.volume = 0;\r\n            setIsMuted(true);\r\n            setVolume(0);\r\n            setPrevVolumeValue(volume);\r\n        }\r\n    };\r\n\r\n    const onVolumeChangeHandler = (e) => {\r\n        const volumeLevel = e.target.value / 100;\r\n        audioRef.current.volume = volumeLevel;\r\n        setVolume(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"time_control\">\r\n                <p>{getTime(songInfo.currentTime)}</p>\r\n                <div\r\n                    style={{\r\n                        background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\r\n                    }}\r\n                    className=\"track\"\r\n                >\r\n                    <input\r\n                        min={0}\r\n                        max={songInfo.duration || 0}\r\n                        value={songInfo.currentTime}\r\n                        onChange={dragHandler}\r\n                        type=\"range\"\r\n                    />\r\n                    <div style={trackAnim} className=\"animate_track\"></div>\r\n                </div>\r\n                <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n            </div>\r\n            <div className=\"play_volume_wrapper\">\r\n                <div className=\"play_control\">\r\n                    <FontAwesomeIcon\r\n                        onClick={() => skipTrackHandler(\"backward\")}\r\n                        className=\"btn_control skip_backward\"\r\n                        size=\"2x\"\r\n                        icon={faAngleLeft}\r\n                    />\r\n                    <FontAwesomeIcon\r\n                        onClick={() => playSongHandler()}\r\n                        className=\"btn_control play\"\r\n                        size=\"2x\"\r\n                        icon={isPlaying ? faPause : faPlay}\r\n                    />\r\n                    <FontAwesomeIcon\r\n                        onClick={() => skipTrackHandler(\"forward\")}\r\n                        className=\"btn_control skip_forward\"\r\n                        size=\"2x\"\r\n                        icon={faAngleRight}\r\n                    />\r\n                </div>\r\n                <div className=\"volume_control\">\r\n                    <div\r\n                        className=\"track_volume\"\r\n                        style={{\r\n                            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\r\n                        }}\r\n                    >\r\n                        <input\r\n                            type=\"range\"\r\n                            min={0}\r\n                            max={100}\r\n                            onChange={onVolumeChangeHandler}\r\n                            value={volume}\r\n                        />\r\n                        <div\r\n                            className=\"animate_volume\"\r\n                            style={{ transform: `translateX(${volume}%)` }}\r\n                        ></div>\r\n                    </div>\r\n                    <FontAwesomeIcon\r\n                        onClick={onVolumeClickHandler}\r\n                        className=\"volume_icon\"\r\n                        icon={isMuted ? faVolumeMute : faVolumeUp}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faMinus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function LibrarySong({\r\n    song,\r\n    songs,\r\n    setSongs,\r\n    currentSong,\r\n    setCurrentSong,\r\n    listQueue,\r\n    setListQueue,\r\n    id,\r\n    audioRef,\r\n    isPlaying,\r\n    typeOfButton\r\n}) {\r\n    useEffect(() => {\r\n        if(listQueue !== undefined) {\r\n            listQueue.map((lq) => {\r\n                const correspondingInSongs = songs.find((s) => s.name === lq.name)\r\n                if(correspondingInSongs) {\r\n                    lq.active = correspondingInSongs.active\r\n                }\r\n            })\r\n        }\r\n    }, [songs])\r\n    \r\n    const songSelectHandler = async () => {\r\n        await setCurrentSong(song);\r\n\r\n        const activeSong = songs.map((song) => {\r\n            if (song.id === id) {\r\n                return { ...song, active: true };\r\n            } else {\r\n                return { ...song, active: false };\r\n            }\r\n        });\r\n        setSongs(activeSong);\r\n\r\n        if (isPlaying) audioRef.current.play();\r\n    };\r\n\r\n    const addToQueue = (event) => {\r\n        const isSongInQueue = listQueue.some((queueSong) => queueSong.id === song.id);\r\n        if (!isSongInQueue) {\r\n            setListQueue([...listQueue, {...song, active: false}]);\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const removeFromQueue = (event) => {\r\n        if(listQueue !== undefined) {\r\n            const updatedListQueue = listQueue.filter((queueSong) => queueSong.id !== song.id);\r\n            setListQueue(updatedListQueue);\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div\r\n            onClick={songSelectHandler}\r\n            className={`library_song ${song.active ? \"selected_song\" : \"\"}`}\r\n        >\r\n            <img src={song.cover} alt={song.name} />\r\n            <div className=\"song_description\">\r\n                    <h4>{song.name}</h4>\r\n                    <h6>{song.artist}</h6>\r\n            </div>\r\n            { typeOfButton && (\r\n                <button onClick={typeOfButton === \"faPlus\" ? addToQueue : removeFromQueue}>\r\n                    <FontAwesomeIcon id=\"icon\" icon={typeOfButton === \"faPlus\" ? faPlus : faMinus} />\r\n                </button>\r\n            )} \r\n        </div>\r\n    );\r\n}\r\n","import LibrarySong from \"./LibrarySong\";\r\n\r\nexport default function Library({\r\n    songs,\r\n    setSongs,\r\n    setCurrentSong,\r\n    audioRef,\r\n    isPlaying,\r\n    libraryStatus,\r\n    listQueue,\r\n    setListQueue,\r\n    typeOfButton\r\n}) {\r\n    return (\r\n        <div className={`library ${libraryStatus ? \"active_library\" : \"\"}`}>\r\n            <h2>Library</h2>\r\n            <div className=\"library_songs\">\r\n                {songs.map((song) => (\r\n                    <LibrarySong\r\n                        setCurrentSong={setCurrentSong}\r\n                        song={song}\r\n                        setSongs={setSongs}\r\n                        songs={songs}\r\n                        id={song.id}\r\n                        key={song.id}\r\n                        isPlaying={isPlaying}\r\n                        audioRef={audioRef}\r\n                        listQueue={listQueue}\r\n                        setListQueue={setListQueue}\r\n                        typeOfButton={typeOfButton}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import LibrarySong from \"./LibrarySong\";\r\n\r\nexport default function ListQueue({\r\n    songs,\r\n    setSongs,\r\n    currentSong,\r\n    setCurrentSong,\r\n    audioRef,\r\n    isPlaying,\r\n    listQueue,\r\n    setListQueue\r\n}) {\r\n    return (\r\n        <>\r\n            <h2>Queue</h2>\r\n            <div className=\"list_songs\" style={ listQueue.length == 0 ? {\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center'\r\n            } : null }>\r\n                {\r\n                    listQueue.length !== 0 ? listQueue.map((song) => (\r\n                    <LibrarySong\r\n                        listQueue={listQueue}\r\n                        setListQueue={setListQueue}\r\n                        currentSong={currentSong}\r\n                        setCurrentSong={setCurrentSong}\r\n                        song={song}\r\n                        setSongs={setSongs}\r\n                        songs={songs}\r\n                        id={song.id}\r\n                        key={song.id}\r\n                        isPlaying={isPlaying}\r\n                        audioRef={audioRef}\r\n                        typeOfButton={\"faMinus\"}\r\n                    />\r\n                    )) : (\r\n                        <p style={{\r\n                            color: 'gray'\r\n                        }}>\r\n                            You haven't add any songs yet to queue\r\n                        </p>\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import LibrarySong from \"./LibrarySong\";\r\n\r\nexport default function ListRecommend({\r\n    songs,\r\n    setSongs,\r\n    currentSong,\r\n    setCurrentSong,\r\n    audioRef,\r\n    isPlaying,\r\n    listStatus,\r\n    listQueue,\r\n    setListQueue,\r\n    typeOfButton,\r\n}) {\r\n    return (\r\n        <>\r\n            <h2>Recommend</h2>\r\n            <div className=\"list_songs\">\r\n                {songs.map((song) => (\r\n                    <LibrarySong\r\n                        setCurrentSong={setCurrentSong}\r\n                        song={song}\r\n                        setSongs={setSongs}\r\n                        songs={songs}\r\n                        id={song.id}\r\n                        key={song.id}\r\n                        isPlaying={isPlaying}\r\n                        audioRef={audioRef}\r\n                        typeOfButton={typeOfButton}\r\n                        listQueue={listQueue}\r\n                        setListQueue={setListQueue}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import ListQueue from \"./ListQueue\";\r\nimport ListRecommend from \"./ListRecommend\";\r\n\r\nexport default function List({\r\n    songs,\r\n    setSongs,\r\n    currentSong,\r\n    setCurrentSong,\r\n    audioRef,\r\n    isPlaying,\r\n    listStatus,\r\n    listQueue,\r\n    setListQueue,\r\n    typeOfButton,\r\n}) {\r\n    return (\r\n        <div className={`list ${listStatus ? \"active_list\" : \"\"}`}>\r\n            <ListQueue\r\n                songs={songs}\r\n                setSongs={setSongs}\r\n                currentSong={currentSong}\r\n                setCurrentSong={setCurrentSong}\r\n                audioRef={audioRef}\r\n                isPlaying={isPlaying}\r\n                listQueue={listQueue}\r\n                setListQueue={setListQueue}\r\n            />\r\n            <ListRecommend\r\n                songs={songs}\r\n                setSongs={setSongs}\r\n                currentSong={currentSong}\r\n                setCurrentSong={setCurrentSong}\r\n                audioRef={audioRef}\r\n                isPlaying={isPlaying}\r\n                listQueue={listQueue}\r\n                setListQueue={setListQueue}\r\n                typeOfButton={typeOfButton}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function Nav({\r\n    libraryStatus,\r\n    setLibraryStatus,\r\n    listStatus,\r\n    setListStatus,\r\n    darkThemeHandler,\r\n}) {\r\n    return (\r\n        <nav>\r\n            <h1>Waves</h1>\r\n\r\n            <button\r\n                onClick={() => {\r\n                    setLibraryStatus(!libraryStatus)\r\n                    setListStatus(false)\r\n                }}\r\n                className={libraryStatus ? \"active_library_btn\" : \"\"}\r\n            >\r\n                Library <FontAwesomeIcon icon={faMusic} />\r\n            </button>\r\n\r\n            <button\r\n                onClick={() => {\r\n                    setListStatus(!listStatus)\r\n                    setLibraryStatus(false)\r\n                }}\r\n                className={listStatus ? \"active_list_btn\" : \"\"}\r\n            >\r\n                List <FontAwesomeIcon icon={faMusic} />\r\n            </button>\r\n\r\n            <div className=\"switch\" id=\"switch\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    name=\"switch\"\r\n                    className=\"switch-checkbox\"\r\n                    id=\"myswitch\"\r\n                    onChange={darkThemeHandler}\r\n                />\r\n                <label className=\"switch-label\" htmlFor=\"myswitch\">\r\n                    <span className=\"switch-inner\"></span>\r\n                    <span className=\"switch-switch\"></span>\r\n                </label>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHop() {\r\n    return [\r\n        {\r\n            name: \"Beaver Creek\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n            artist: \"Aso, Middle School, Aviino\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n            color: [\"#205950\", \"#2ab3bf\"],\r\n            id: uuidv4(),\r\n            active: true,\r\n        },\r\n        {\r\n            name: \"Daylight\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n            artist: \"Aiguille\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n            color: [\"#EF8EA9\", \"#ab417f\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Keep Going\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n            artist: \"Swørn\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n            color: [\"#CD607D\", \"#c94043\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Nightfall\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n            artist: \"Aiguille\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n            color: [\"#EF8EA9\", \"#ab417f\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Reflection\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n            artist: \"Swørn\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n            color: [\"#CD607D\", \"#c94043\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Under the City Stars\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n            artist: \"Aso, Middle School, Aviino\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n            color: [\"#205950\", \"#2ab3bf\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        //ADD MORE HERE\r\n        \r\n    ];\r\n}\r\n\r\nexport default chillHop;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport \"./styles/app.scss\";\r\nimport Song from \"./components/Song\";\r\nimport Player from \"./components/Player\";\r\nimport Library from \"./components/Library\";\r\nimport List from \"./components/List\";\r\nimport Nav from \"./components/Nav\";\r\nimport data from \"./data\";\r\n\r\nfunction App() {\r\n    const [songs, setSongs] = useState(data());\r\n    const [currentSong, setCurrentSong] = useState(songs[0]);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [libraryStatus, setLibraryStatus] = useState(false);\r\n    const [listStatus, setListStatus] = useState(false)\r\n    const [listQueue, setListQueue] = useState([]);\r\n    const [songInfo, setSongInfo] = useState({\r\n        currentTime: 0,\r\n        duration: 0,\r\n        animationPercentage: 0,\r\n    });\r\n    const [darkTheme, setDarkTheme] = useState(false);\r\n    const audioRef = useRef(null);\r\n\r\n    const timeUpdateHandler = (e) => {\r\n        const currentTime = e.target.currentTime;\r\n        const duration = e.target.duration;\r\n        const roundedCurrentTime = Math.round(currentTime);\r\n        const roundedDuration = Math.round(duration);\r\n        const animationPercentage = Math.round(\r\n            (roundedCurrentTime / roundedDuration) * 100\r\n        );\r\n\r\n        setSongInfo({\r\n            ...songInfo,\r\n            currentTime,\r\n            duration,\r\n            animationPercentage,\r\n        });\r\n    };\r\n\r\n    const activeLibraryHandler = (nextPrev) => {\r\n        const activeSong = songs.map((song) => {\r\n            if (song.id === nextPrev.id) {\r\n                return { ...song, active: true };\r\n            } else {\r\n                return { ...song, active: false };\r\n            }\r\n        });\r\n        setSongs(activeSong);\r\n    };\r\n\r\n    const songEndHandler = async () => {\r\n        if (listQueue.length !== 0) {\r\n            let currentIndex = listQueue.findIndex(\r\n                (lq) => lq.id === currentSong.id\r\n            );\r\n            await setCurrentSong(listQueue[(currentIndex + 1) % listQueue.length]);\r\n            activeLibraryHandler(listQueue[(currentIndex + 1) % listQueue.length]);\r\n        } else {\r\n            let currentIndex = songs.findIndex(\r\n                (song) => song.id === currentSong.id\r\n            );\r\n            await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n            activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n        }\r\n\r\n        if (isPlaying) audioRef.current.play();\r\n    };\r\n\r\n    const darkThemeHandler = () => {\r\n        if (darkTheme === false) {\r\n            setDarkTheme(true);\r\n        } else {\r\n            setDarkTheme(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={`App \r\n                        ${libraryStatus ? \"library_active\" : \"\"} \r\n                        ${darkTheme ? \"dark\" : \"\"}\r\n                        ${listStatus ? \"list_active\" : \"\"}`}\r\n        >\r\n            <Nav\r\n                libraryStatus={libraryStatus}\r\n                setLibraryStatus={setLibraryStatus}\r\n                listStatus={listStatus}\r\n                setListStatus={setListStatus}\r\n                darkTheme={darkTheme}\r\n                setDarkTheme={setDarkTheme}\r\n                darkThemeHandler={darkThemeHandler}\r\n            />\r\n            <Song currentSong={currentSong} songInfo={songInfo} />\r\n            <Player\r\n                isPlaying={isPlaying}\r\n                setIsPlaying={setIsPlaying}\r\n                currentSong={currentSong}\r\n                audioRef={audioRef}\r\n                songInfo={songInfo}\r\n                setSongInfo={setSongInfo}\r\n                songs={songs}\r\n                setCurrentSong={setCurrentSong}\r\n                setSongs={setSongs}\r\n            />\r\n            <Library\r\n                libraryStatus={libraryStatus}\r\n                isPlaying={isPlaying}\r\n                setCurrentSong={setCurrentSong}\r\n                audioRef={audioRef}\r\n                songs={songs}\r\n                setSongs={setSongs}\r\n                listQueue={listQueue}\r\n                setListQueue={setListQueue}\r\n                typeOfButton={\"faPlus\"}\r\n            />\r\n            <List\r\n                listStatus={listStatus}\r\n                isPlaying={isPlaying}\r\n                currentSong={currentSong}\r\n                setCurrentSong={setCurrentSong}\r\n                audioRef={audioRef}\r\n                songs={songs}\r\n                setSongs={setSongs}\r\n                listQueue={listQueue}\r\n                setListQueue={setListQueue}\r\n                typeOfButton={\"faPlus\"}\r\n            />\r\n            <audio\r\n                onTimeUpdate={timeUpdateHandler}\r\n                onLoadedMetadata={timeUpdateHandler}\r\n                ref={audioRef}\r\n                src={currentSong.audio}\r\n                onEnded={songEndHandler}\r\n            ></audio>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}